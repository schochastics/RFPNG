// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// touint8
std::vector<uint8_t> touint8(IntegerVector arr, Rcpp::Dimension dim);
RcppExport SEXP _RFPNG_touint8(SEXP arrSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type arr(arrSEXP);
    Rcpp::traits::input_parameter< Rcpp::Dimension >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(touint8(arr, dim));
    return rcpp_result_gen;
END_RCPP
}
// fromuint8
IntegerVector fromuint8(std::vector<uint8_t> arr, int x, int y, int z);
RcppExport SEXP _RFPNG_fromuint8(SEXP arrSEXP, SEXP xSEXP, SEXP ySEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<uint8_t> >::type arr(arrSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(fromuint8(arr, x, y, z));
    return rcpp_result_gen;
END_RCPP
}
// writeFPNG
bool writeFPNG(IntegerVector& x, const char* file_path);
RcppExport SEXP _RFPNG_writeFPNG(SEXP xSEXP, SEXP file_pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const char* >::type file_path(file_pathSEXP);
    rcpp_result_gen = Rcpp::wrap(writeFPNG(x, file_path));
    return rcpp_result_gen;
END_RCPP
}
// readFPNG
IntegerVector readFPNG(const char* file_path);
RcppExport SEXP _RFPNG_readFPNG(SEXP file_pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type file_path(file_pathSEXP);
    rcpp_result_gen = Rcpp::wrap(readFPNG(file_path));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RFPNG_touint8", (DL_FUNC) &_RFPNG_touint8, 2},
    {"_RFPNG_fromuint8", (DL_FUNC) &_RFPNG_fromuint8, 4},
    {"_RFPNG_writeFPNG", (DL_FUNC) &_RFPNG_writeFPNG, 2},
    {"_RFPNG_readFPNG", (DL_FUNC) &_RFPNG_readFPNG, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RFPNG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
